version: '3.8'
services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.12-2.3.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  mysql:
    image: mysql:8.0.19
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: order_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - ./mysql/data:/var/lib/mysql

  order-service:
    build:
      context: ./order-service               # order-service 디렉토리에서 Dockerfile 빌드
      dockerfile: Dockerfile
    ports:
      - "8081:8081"                          # 호스트 포트 -> 컨테이너 포트 매핑
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/order_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_PROFILES_ACTIVE: docker         # docker 프로파일 사용
    depends_on:
      - kafka
      - mysql

  payment-service:
    build:
      context: ./payment-service             # payment-service 디렉토리에서 Dockerfile 빌드
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/payment_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - kafka
      - mysql

  inventory-service:
    build:
      context: ./inventory-service           # inventory-service 디렉토리에서 Dockerfile 빌드
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/inventory_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - kafka
      - mysql

  shipping-service:
    build:
      context: ./shipping-service            # shipping-service 디렉토리에서 Dockerfile 빌드
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/shipping_db
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - kafka
      - mysql

networks:
  default:
    driver: bridge
